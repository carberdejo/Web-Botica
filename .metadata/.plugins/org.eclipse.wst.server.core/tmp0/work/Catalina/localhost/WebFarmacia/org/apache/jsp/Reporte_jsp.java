/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.1
 * Generated at: 2024-12-19 06:19:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;
import entidades.*;
import dao.*;
import interfaces.*;
import bd.*;

public final class Reporte_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(10);
    _jspx_imports_packages.add("interfaces");
    _jspx_imports_packages.add("bd");
    _jspx_imports_packages.add("dao");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("entidades");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("java.util.List");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\r\n");
      out.write("\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"styles.css\">\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\r\n");
      out.write("    <style>\r\n");
      out.write("         body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            background-color: #f4f4f4;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        header {\r\n");
      out.write("            background-color: #4CAF50;\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 1rem;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            font-size: 1.5rem;\r\n");
      out.write("        }\r\n");
      out.write("        .container {\r\n");
      out.write("            margin: 2rem auto;\r\n");
      out.write("            max-width: 80%;\r\n");
      out.write("            background: white;\r\n");
      out.write("            padding: 1rem;\r\n");
      out.write("            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .filters {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            flex-wrap: wrap;\r\n");
      out.write("            margin-bottom: 1.5rem;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .filters div {\r\n");
      out.write("            margin-bottom: 1rem;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        label {\r\n");
      out.write("            display: block;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            margin-bottom: 0.5rem;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input, select {\r\n");
      out.write("            padding: 0.5rem;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            max-width: 200px;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        button {\r\n");
      out.write("            background-color: #4CAF50;\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            padding: 0.7rem 1.5rem;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            font-size: 1rem;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            transition: background-color 0.3s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        button:hover {\r\n");
      out.write("            background-color: #45a049;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        table {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            border-collapse: collapse;\r\n");
      out.write("            margin-top: 1.5rem;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        table th, table td {\r\n");
      out.write("            border: 1px solid #ddd;\r\n");
      out.write("            padding: 0.8rem;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        table th {\r\n");
      out.write("            background-color: #f4f4f4;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .no-data {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            color: #999;\r\n");
      out.write("            margin-top: 1rem;\r\n");
      out.write("        }\r\n");
      out.write("        .product-card {\r\n");
      out.write("            border: 1px solid #ddd;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("      		padding: 15px;\r\n");
      out.write("      		text-align: center;\r\n");
      out.write("      		transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n");
      out.write("    	}\r\n");
      out.write("    	.product-card:hover {\r\n");
      out.write("      		transform: scale(1.05);\r\n");
      out.write("      		box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("    	}\r\n");
      out.write("        main {\r\n");
      out.write("            padding: 2rem;\r\n");
      out.write("        }\r\n");
      out.write("        footer {\r\n");
      out.write("            background-color: #EEEE;\r\n");
      out.write("            color: black;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            padding: 1rem 0;\r\n");
      out.write("            position: fixed;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            bottom: 0;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("     \r\n");
      out.write("\r\n");
      out.write("\r\n");
 if(session.getAttribute("listaCategoria")==null){
	
      out.write("\r\n");
      out.write("	<script> window.location.href=\"CategoriaServlet\"</script>\r\n");
      out.write("	");

}	

      out.write('\r');
      out.write('\n');
 User datosUser=(User) session.getAttribute("user");
      out.write("\r\n");
      out.write("<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n");
      out.write("  <div class=\"container-fluid\">\r\n");
      out.write("    <a class=\"navbar-brand\" href=\"Principal.jsp\">MichiFarma</a>\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n");
      out.write("      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          	<a class=\"navbar-brand d-flex align-items-center\" href=\"#\">\r\n");
      out.write("     		 <img src=\"img/logo.png\" alt=\"Logo\" width=\"40\" height=\"	40\" class=\"me-2\">\r\n");
      out.write("    		</a>\r\n");
      out.write("        </li>\r\n");
      out.write("         <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link active\" aria-current=\"page\" href=\"AccionServlet?tipo=ListarTodo\">Productos</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        ");
if(datosUser.getRole().equals("admin")){ 
      out.write("\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link active\" aria-current=\"page\" href=\"Reporte.jsp\">Reportes</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link active\" aria-current=\"page\" href=\"ClienteServlet?accion=ListarCli\">Clientes</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link active\" aria-current=\"page\" href=\"ProveedoresServlet?caso=ListarProv\">Proveedores</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        ");
} 
      out.write("\r\n");
      out.write("        <li class=\"nav-item dropdown\">\r\n");
      out.write("          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n");
      out.write("            Categorías\r\n");
      out.write("          </a>\r\n");
      out.write("          <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n");
      out.write("          \r\n");
      out.write("          	");
 List<Categorias> listaCategoria =(List<Categorias>) session.getAttribute("listaCategoria"); 
      out.write("\r\n");
      out.write("          		");
if(listaCategoria != null){
					for(Categorias item:listaCategoria){
				
      out.write("		\r\n");
      out.write("						\r\n");
      out.write("						<li><a class=\"dropdown-item\" href=\"ProductoServlet?type=info&idCategoria=");
      out.print(item.getIdCategoria());
      out.write("\">\r\n");
      out.write("							");
      out.print(item.getNombreCategoria() );
      out.write("\r\n");
      out.write("						</a></li>	\r\n");
      out.write("						");

					}
				}
				
      out.write("\r\n");
      out.write("          </ul>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"btn btn-outline-success\" aria-current=\"page\" href=\"VentaServlet?tipo=listarCarrito&usuario=");
      out.print(datosUser.getId());
      out.write("\">Carrito</a>\r\n");
      out.write("        </li>\r\n");
      out.write("      </ul>\r\n");
      out.write("      <!-- Elementos alineados a la derecha -->\r\n");
      out.write("      \r\n");
      out.write("      <ul class=\"navbar-nav ms-auto\">\r\n");
      out.write("        <li class=\"nav-item dropdown\">\r\n");
      out.write("          <a class=\"btn btn-success\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n");
      out.write("            Bienvenido\r\n");
      out.write("          </a>\r\n");
      out.write("          <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n");
      out.write("            <a class=\"dropdown-item\">\r\n");
      out.write("            ");
if(datosUser.getRole().equals("admin")){ 
      out.write("\r\n");
      out.write("              <img src=\"img/admin.png\" alt=\"60\" width=\"60\">\r\n");
      out.write("           	");
} else{
      out.write("\r\n");
      out.write("           		<img src=\"img/cliente.png\" alt=\"60\" width=\"60\">\r\n");
      out.write("           	");
} 
      out.write("\r\n");
      out.write("            </a>\r\n");
      out.write("            <a class=\"dropdown-item\" href=\"#\">");
      out.print(datosUser.getRole());
      out.write("</a>\r\n");
      out.write("            <a class=\"dropdown-item\" href=\"#\">");
      out.print(datosUser.getName() );
      out.write("</a>\r\n");
      out.write("            <a class=\"dropdown-item\" href=\"#\">");
      out.print(datosUser.getEmail() );
      out.write("</a>\r\n");
      out.write("            \r\n");
      out.write("             <a name=\"xxxxxxxxx\" value=\"Salir\" class=\"dropdown-item\" href=\"Login.jsp\">Salir</a>\r\n");
      out.write("           \r\n");
      out.write("          </ul>\r\n");
      out.write("        </li>\r\n");
      out.write("      </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n");
      out.write("    <div class=\"container-fluid\">\r\n");
      out.write("        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("            <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("        </button>\r\n");
      out.write("        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n");
      out.write("            <ul class=\"navbar-nav\">\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link\" href=\"Reporte.jsp\">Reporte de Ventas</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link\" href=\"ReporteProducto.jsp\">Reporte de Producto Más Adquirido</a>\r\n");
      out.write("                </li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n");
      out.write("        <!-- Navbar Content -->\r\n");
      out.write("    </nav>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <h2>Generar Reporte de Ventas</h2>\r\n");
      out.write("        <form method=\"post\" action=\"\">\r\n");
      out.write("            <div>\r\n");
      out.write("                <label for=\"startDate\">Fecha Inicio:</label>\r\n");
      out.write("                <input type=\"date\" id=\"startDate\" name=\"startDate\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div>\r\n");
      out.write("                <label for=\"endDate\">Fecha Fin:</label>\r\n");
      out.write("                <input type=\"date\" id=\"endDate\" name=\"endDate\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <br>\r\n");
      out.write("            <div>\r\n");
      out.write("                <button type=\"submit\" class=\"btn btn-primary\">Generar Reporte</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("        <br>\r\n");
      out.write("\r\n");
      out.write("        <h3>Resultados del Reporte</h3>\r\n");
      out.write("        <table class=\"table\">\r\n");
      out.write("            <thead>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    \r\n");
      out.write("                    <th>Fecha Inicio</th>\r\n");
      out.write("                    <th>Fecha Fin</th>\r\n");
      out.write("                    <th>Total Ventas</th>\r\n");
      out.write("                    <th>Cantidad Ventas</th>\r\n");
      out.write("                    <th>Productos Vendidos</th>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("            <tbody id=\"resultadosReporte\">\r\n");
      out.write("            <!-- Los resultados se cargarán dinámicamente aquí -->\r\n");
      out.write("        </tbody>\r\n");
      out.write("            <tbody>\r\n");
      out.write("            \r\n");
      out.write("                ");
 String startDate = request.getParameter("startDate");
                String endDate = request.getParameter("endDate");
                
                if (startDate != null && endDate != null ) {
                	DAOFactory daoFactory = DAOFactory.getDAOFactory(DAOFactory.MYSQL);
            		ReporteInterface producDAO = daoFactory.getReporteDAO();
                	List<Reporte> reportePorFechas =(List<Reporte>) producDAO.obtenerReportePorFechas(request.getParameter("startDate"), request.getParameter("endDate"));
    			session.setAttribute("listaReportePorFecha", reportePorFechas);
    			
                	System.out.print("entro");
                	   if(reportePorFechas != null){
     					for(Reporte item:reportePorFechas){
                     
      out.write("\r\n");
      out.write("                     <tr>\r\n");
      out.write("     					\r\n");
      out.write("     					<td>");
      out.print(item.getFechaInicio() );
      out.write("</td>\r\n");
      out.write("     					<td>");
      out.print(item.getFechaFin() );
      out.write("</td>\r\n");
      out.write("     					<td>");
      out.print(item.getTotalVentas() );
      out.write("</td>\r\n");
      out.write("     					<td>");
      out.print(item.getCantidadVentas() );
      out.write("</td>\r\n");
      out.write("     					<td>");
      out.print(item.getProductosVendidos() );
      out.write("</td>\r\n");
      out.write("     			   </tr>\r\n");
      out.write("     				");

     					}
     				}
     			
                	
                }
                
                
      out.write("		\r\n");
      out.write("            </tbody>\r\n");
      out.write("        </table>\r\n");
      out.write("    </div>\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
