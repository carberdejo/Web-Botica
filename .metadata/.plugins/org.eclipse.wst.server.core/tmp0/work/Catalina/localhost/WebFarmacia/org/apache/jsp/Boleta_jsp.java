/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.1
 * Generated at: 2024-12-26 22:04:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import entidades.*;
import java.util.List;

public final class Boleta_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("entidades");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("java.util.List");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
List<DetalleVenta> listaDetalleventa = (List<DetalleVenta>) session.getAttribute("listaDetalleventa");
  User cliente = (User) session.getAttribute("cliente");

      out.write("\r\n");
      out.write("	<body>\r\n");
      out.write("  <div class=\"container mt-5\">\r\n");
      out.write("    <div class=\"card\">\r\n");
      out.write("      <div class=\"card-header text-center bg-primary text-white\">\r\n");
      out.write("        <h3>Boleta de Pago</h3>\r\n");
      out.write("        <p>No. 001-000123</p>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"card-body\">\r\n");
      out.write("        <!-- Información del comprador -->\r\n");
      out.write("        <h5 class=\"text-secondary\">Detalles del Cliente:</h5>\r\n");
      out.write("        <ul class=\"list-group mb-4\">\r\n");
      out.write("          <li class=\"list-group-item\"><strong>Nombre:</strong> ");
      out.print(cliente.getName() );
      out.write("</li>\r\n");
      out.write("          <li class=\"list-group-item\"><strong>Correo:</strong>");
      out.print(cliente.getEmail() );
      out.write("</li>\r\n");
      out.write("          <li class=\"list-group-item\"><strong>Id:</strong> ");
      out.print(cliente.getId() );
      out.write("</li>\r\n");
      out.write("        </ul>\r\n");
      out.write("        \r\n");
      out.write("        <!-- Detalles de la compra -->\r\n");
      out.write("        <h5 class=\"text-secondary\">Detalles de la Compra:</h5>\r\n");
      out.write("        <table class=\"table table-striped\">\r\n");
      out.write("          <thead class=\"table-dark\">\r\n");
      out.write("            <tr>\r\n");
      out.write("              <th>Producto</th>\r\n");
      out.write("              <th>Cantidad</th>\r\n");
      out.write("              <th>Precio Unitario</th>\r\n");
      out.write("              <th>Subtotal</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("          </thead>\r\n");
      out.write("          <tbody>\r\n");
      out.write("          ");
if(listaDetalleventa != null){
				for(DetalleVenta item : listaDetalleventa){ 
      out.write("	\r\n");
      out.write("            <tr>\r\n");
      out.write("              <td>");
      out.print(item.getNombreProducto() );
      out.write("</td>\r\n");
      out.write("              <td>");
      out.print(item.getCantidad() );
      out.write("</td>\r\n");
      out.write("              <td>");
      out.print(item.getPrecio() );
      out.write("</td>\r\n");
      out.write("              <td>");
      out.print(item.getImporte() );
      out.write("</td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            ");
}} 
      out.write("\r\n");
      out.write("          </tbody>\r\n");
      out.write("          <tfoot>\r\n");
      out.write("          ");
 double importe = 0; 
        for(DetalleVenta det : listaDetalleventa){
            importe += Double.parseDouble(det.getImporte());  	
        }
    
      out.write("\r\n");
      out.write("            <tr>\r\n");
      out.write("              <td colspan=\"3\" class=\"text-end\"><strong>Total:</strong></td>\r\n");
      out.write("              <td><strong>S/ ");
      out.print(importe );
      out.write("</strong></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("          </tfoot>\r\n");
      out.write("        </table>\r\n");
      out.write("        \r\n");
      out.write("        <!-- Botón para imprimir -->\r\n");
      out.write("        <div class=\"text-center mt-4\">\r\n");
      out.write("          <button class=\"btn btn-success\" onclick=\"window.print()\">Imprimir Boleta</button>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"text-center mt-4\">\r\n");
      out.write("          <a class=\"btn btn-success\" href=\"Principal.jsp\">Principal</a>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"card-footer text-center\">\r\n");
      out.write("        <p class=\"text-muted\">Gracias por su compra</p>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
